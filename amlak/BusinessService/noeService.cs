using System;
using System.Data;

using RAD.AppFramework;
using RAD.AppFramework.Data;
using RAD.AppFramework.QueryObjects;

using amlak.Common;
using amlak.DatabaseSchema;
using amlak.Data;
using amlak.DataAccess.Adapters;
using amlak.BusinessService.Base;

namespace amlak.BusinessService
{
	/// <summary>
	/// noeService allows for application specific business logic to be added without 
	/// having to make changes to the auto-generated noeServiceBase class. 
	/// </summary>
	/// <remarks>
	/// Any additional functionality must be added to the noeService class.
	/// <br/><br/>
	/// This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
	/// </remarks>
	public class noeService : noeServiceBase
	{
		#region Constants
		
		
		
		#endregion
		
		
		#region Fields
		
		/// <summary>
		/// A static instance of the noeService
		/// </summary>
		static noeService m_Instance;
		
		#endregion
		
		
		#region Constructors
		
		/// <summary>
		/// Creates a new noeService
		/// </summary>
		public noeService() : base()
		{
		}
		
		/// <summary>
		/// Creates a new noeService and specifies the Database context
		/// </summary>		
		public noeService(DatabaseConnection connection) : base(connection)
		{
		}
				
		/// <summary>
		/// Initializes the static instance
		/// </summary>
		static noeService()
		{
			m_Instance = new noeService();
		}
		
		#endregion
		
		
		#region Public Properties
		
		/// <summary>
		/// A default instance of the noeService
		/// </summary>
		public static noeService Instance
		{
			get { return m_Instance; }
		}
		
		#endregion
		
		
		#region Private Methods
		
		
		
		#endregion
		
		
		#region Public Methods
		
		
		
		#endregion
	}
}
