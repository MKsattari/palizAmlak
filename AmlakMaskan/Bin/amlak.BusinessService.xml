<?xml version="1.0"?>
<doc>
    <assembly>
        <name>amlak.BusinessService</name>
    </assembly>
    <members>
        <member name="T:amlak.BusinessService.Base.divar_dakli_glbServiceBase">
             <summary>
             divar_dakli_glbServiceBase is a base business object implementing the most common data operations 
             for the divar_dakli_glb table. 
             </summary>
             <remarks>
             Any application specific business logic must be added to the 
             divar_dakli_glbService class. Do not modify this class.
            
             This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
             </remarks>
        </member>
        <member name="F:amlak.BusinessService.Base.divar_dakli_glbServiceBase.m_divar_dakli_glbAdapter">
            <summary>
            The strongly-typed DataAdapter to use for Get and Update operations
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.#ctor">
            <summary>
            Creates a new divar_dakli_glbService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new divar_dakli_glbService and sets the Database context
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.CreateDataObjectFactory">
            <summary>
            Creates an instance of a factory that is used to create Database objects
            </summary>
            <returns>A DatabaseAccessObjectFactory instance </returns>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.UpdateDataSet(amlak.Data.divar_dakli_glbDataSet)">
            <summary>
            Perform any inserts, updates or deletes on the DataSet
            </summary>
            <param name="dataSetUpdate">The DataSet to update</param>
            <returns>The number of rows updated</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.GetAll(amlak.Data.divar_dakli_glbDataSet)">
            <summary>
            Return all rows from the divar_dakli_glb table
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.GetByszh_idAnddivar_dakli_glb_id(amlak.Data.divar_dakli_glbDataSet,System.Int32,System.Int32)">
            <summary>
            Return all rows from the divar_dakli_glb table by Primary Key
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="szh_id">The szh_id to use as search criteria</param>
            <param name="divar_dakli_glb_id">The divar_dakli_glb_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.GetBydivar_dakli_glb_id(amlak.Data.divar_dakli_glbDataSet,System.Int32)">
            <summary>
            Return all rows from the divar_dakli_glb table by divar_dakli_glb_id
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="divar_dakli_glb_id">The divar_dakli_glb_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.divar_dakli_glbServiceBase.GetByQuery(System.Data.DataSet,RAD.AppFramework.QueryObjects.Query)">
            <summary>
            Return rows by Query Definition
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="queryDefinition">A Query object that defines the query</param>
            <returns>A count of the rows added to the DataSet</returns>
        </member>
        <member name="T:amlak.BusinessService.Base.memariServiceBase">
             <summary>
             memariServiceBase is a base business object implementing the most common data operations 
             for the memari table. 
             </summary>
             <remarks>
             Any application specific business logic must be added to the 
             memariService class. Do not modify this class.
            
             This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
             </remarks>
        </member>
        <member name="F:amlak.BusinessService.Base.memariServiceBase.m_memariAdapter">
            <summary>
            The strongly-typed DataAdapter to use for Get and Update operations
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.#ctor">
            <summary>
            Creates a new memariService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new memariService and sets the Database context
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.CreateDataObjectFactory">
            <summary>
            Creates an instance of a factory that is used to create Database objects
            </summary>
            <returns>A DatabaseAccessObjectFactory instance </returns>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.UpdateDataSet(amlak.Data.memariDataSet)">
            <summary>
            Perform any inserts, updates or deletes on the DataSet
            </summary>
            <param name="dataSetUpdate">The DataSet to update</param>
            <returns>The number of rows updated</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.GetAll(amlak.Data.memariDataSet)">
            <summary>
            Return all rows from the memari table
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.GetByMemariID(amlak.Data.memariDataSet,System.Int32)">
            <summary>
            Return all rows from the memari table by Primary Key
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="MemariID">The MemariID to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.memariServiceBase.GetByQuery(System.Data.DataSet,RAD.AppFramework.QueryObjects.Query)">
            <summary>
            Return rows by Query Definition
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="queryDefinition">A Query object that defines the query</param>
            <returns>A count of the rows added to the DataSet</returns>
        </member>
        <member name="T:amlak.BusinessService.Base.noeServiceBase">
             <summary>
             noeServiceBase is a base business object implementing the most common data operations 
             for the noe table. 
             </summary>
             <remarks>
             Any application specific business logic must be added to the 
             noeService class. Do not modify this class.
            
             This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
             </remarks>
        </member>
        <member name="F:amlak.BusinessService.Base.noeServiceBase.m_noeAdapter">
            <summary>
            The strongly-typed DataAdapter to use for Get and Update operations
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.#ctor">
            <summary>
            Creates a new noeService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new noeService and sets the Database context
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.CreateDataObjectFactory">
            <summary>
            Creates an instance of a factory that is used to create Database objects
            </summary>
            <returns>A DatabaseAccessObjectFactory instance </returns>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.UpdateDataSet(amlak.Data.noeDataSet)">
            <summary>
            Perform any inserts, updates or deletes on the DataSet
            </summary>
            <param name="dataSetUpdate">The DataSet to update</param>
            <returns>The number of rows updated</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.GetAll(amlak.Data.noeDataSet)">
            <summary>
            Return all rows from the noe table
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.GetBynoe_id(amlak.Data.noeDataSet,System.Int32)">
            <summary>
            Return all rows from the noe table by Primary Key
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="noe_id">The noe_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.noeServiceBase.GetByQuery(System.Data.DataSet,RAD.AppFramework.QueryObjects.Query)">
            <summary>
            Return rows by Query Definition
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="queryDefinition">A Query object that defines the query</param>
            <returns>A count of the rows added to the DataSet</returns>
        </member>
        <member name="T:amlak.BusinessService.Base.sazehServiceBase">
             <summary>
             sazehServiceBase is a base business object implementing the most common data operations 
             for the sazeh table. 
             </summary>
             <remarks>
             Any application specific business logic must be added to the 
             sazehService class. Do not modify this class.
            
             This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
             </remarks>
        </member>
        <member name="F:amlak.BusinessService.Base.sazehServiceBase.m_sazehAdapter">
            <summary>
            The strongly-typed DataAdapter to use for Get and Update operations
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.#ctor">
            <summary>
            Creates a new sazehService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new sazehService and sets the Database context
            </summary>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.CreateDataObjectFactory">
            <summary>
            Creates an instance of a factory that is used to create Database objects
            </summary>
            <returns>A DatabaseAccessObjectFactory instance </returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.UpdateDataSet(amlak.Data.sazehDataSet)">
            <summary>
            Perform any inserts, updates or deletes on the DataSet
            </summary>
            <param name="dataSetUpdate">The DataSet to update</param>
            <returns>The number of rows updated</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetAll(amlak.Data.sazehDataSet)">
            <summary>
            Return all rows from the sazeh table
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetByszh_id(amlak.Data.sazehDataSet,System.Int32)">
            <summary>
            Return all rows from the sazeh table by Primary Key
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="szh_id">The szh_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetByfndsion_noe_id(amlak.Data.sazehDataSet,System.Int32)">
            <summary>
            Return all rows from the sazeh table by fndsion_noe_id
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="fndsion_noe_id">The fndsion_noe_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetBysgf_noe_id(amlak.Data.sazehDataSet,System.Int32)">
            <summary>
            Return all rows from the sazeh table by sgf_noe_id
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="sgf_noe_id">The sgf_noe_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetBysklt_noe_id(amlak.Data.sazehDataSet,System.Int32)">
            <summary>
            Return all rows from the sazeh table by sklt_noe_id
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="sklt_noe_id">The sklt_noe_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetBydivar_karji_glb_id(amlak.Data.sazehDataSet,System.Int32)">
            <summary>
            Return all rows from the sazeh table by divar_karji_glb_id
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="divar_karji_glb_id">The divar_karji_glb_id to use as search criteria</param>
            <returns>The number of rows added to the DataSet</returns>
        </member>
        <member name="M:amlak.BusinessService.Base.sazehServiceBase.GetByQuery(System.Data.DataSet,RAD.AppFramework.QueryObjects.Query)">
            <summary>
            Return rows by Query Definition
            </summary>
            <param name="dataSetFill">The DataSet to return the rows into</param>
            <param name="queryDefinition">A Query object that defines the query</param>
            <returns>A count of the rows added to the DataSet</returns>
        </member>
        <member name="T:amlak.BusinessService.divar_dakli_glbService">
            <summary>
            divar_dakli_glbService allows for application specific business logic to be added without 
            having to make changes to the auto-generated divar_dakli_glbServiceBase class. 
            </summary>
            <remarks>
            Any additional functionality must be added to the divar_dakli_glbService class.
            <br/><br/>
            This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
            </remarks>
        </member>
        <member name="F:amlak.BusinessService.divar_dakli_glbService.m_Instance">
            <summary>
            A static instance of the divar_dakli_glbService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.divar_dakli_glbService.#ctor">
            <summary>
            Creates a new divar_dakli_glbService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.divar_dakli_glbService.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new divar_dakli_glbService and specifies the Database context
            </summary>		
        </member>
        <member name="M:amlak.BusinessService.divar_dakli_glbService.#cctor">
            <summary>
            Initializes the static instance
            </summary>
        </member>
        <member name="P:amlak.BusinessService.divar_dakli_glbService.Instance">
            <summary>
            A default instance of the divar_dakli_glbService
            </summary>
        </member>
        <member name="T:amlak.BusinessService.memariService">
            <summary>
            memariService allows for application specific business logic to be added without 
            having to make changes to the auto-generated memariServiceBase class. 
            </summary>
            <remarks>
            Any additional functionality must be added to the memariService class.
            <br/><br/>
            This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
            </remarks>
        </member>
        <member name="F:amlak.BusinessService.memariService.m_Instance">
            <summary>
            A static instance of the memariService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.memariService.#ctor">
            <summary>
            Creates a new memariService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.memariService.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new memariService and specifies the Database context
            </summary>		
        </member>
        <member name="M:amlak.BusinessService.memariService.#cctor">
            <summary>
            Initializes the static instance
            </summary>
        </member>
        <member name="P:amlak.BusinessService.memariService.Instance">
            <summary>
            A default instance of the memariService
            </summary>
        </member>
        <member name="T:amlak.BusinessService.noeService">
            <summary>
            noeService allows for application specific business logic to be added without 
            having to make changes to the auto-generated noeServiceBase class. 
            </summary>
            <remarks>
            Any additional functionality must be added to the noeService class.
            <br/><br/>
            This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
            </remarks>
        </member>
        <member name="F:amlak.BusinessService.noeService.m_Instance">
            <summary>
            A static instance of the noeService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.noeService.#ctor">
            <summary>
            Creates a new noeService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.noeService.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new noeService and specifies the Database context
            </summary>		
        </member>
        <member name="M:amlak.BusinessService.noeService.#cctor">
            <summary>
            Initializes the static instance
            </summary>
        </member>
        <member name="P:amlak.BusinessService.noeService.Instance">
            <summary>
            A default instance of the noeService
            </summary>
        </member>
        <member name="T:amlak.BusinessService.sazehService">
            <summary>
            sazehService allows for application specific business logic to be added without 
            having to make changes to the auto-generated sazehServiceBase class. 
            </summary>
            <remarks>
            Any additional functionality must be added to the sazehService class.
            <br/><br/>
            This class was automatically generated by Rad Software NextGeneration <a href="http://www.radsoftware.com.au">http://www.radsoftware.com.au</a>
            </remarks>
        </member>
        <member name="F:amlak.BusinessService.sazehService.m_Instance">
            <summary>
            A static instance of the sazehService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.sazehService.#ctor">
            <summary>
            Creates a new sazehService
            </summary>
        </member>
        <member name="M:amlak.BusinessService.sazehService.#ctor(RAD.AppFramework.Data.DatabaseConnection)">
            <summary>
            Creates a new sazehService and specifies the Database context
            </summary>		
        </member>
        <member name="M:amlak.BusinessService.sazehService.#cctor">
            <summary>
            Initializes the static instance
            </summary>
        </member>
        <member name="P:amlak.BusinessService.sazehService.Instance">
            <summary>
            A default instance of the sazehService
            </summary>
        </member>
    </members>
</doc>
